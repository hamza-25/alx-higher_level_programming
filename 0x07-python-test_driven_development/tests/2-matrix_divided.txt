Usage:
------

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[2, 4], [6, 8], [10, 2]]
	>>> print(matrix_divided(matrix, 2))
	[[1.0, 2.0], [3.0, 4.0], [5.0, 1.0]]

	>>> matrix = [[2, 4], [6, 8], [10, 2]]
	>>> print(matrix_divided(matrix, "hf"))
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix = [[2, 4], [6, 8], [10, 2]]
	>>> print(matrix_divided(matrix, 0))
        Traceback (most recent call last):
        ZeroDivisionError: division by zero

	>>> print(matrix_divided([10, 5, 6, 11], 2.0))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[10, 5], [1]], 2.0))
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size

	>>> print(matrix_divided([[10, 5, 6], [10, -5, 6]], -2))
	[[-5.0, -2.5, -3.0], [-5.0, 2.5, -3.0]]

	>>> print(matrix_divided())
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> print(matrix_divided([[1,2],[5,2]]))
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix = "string"
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	File "<stdin>", line 1, in <module>
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> >>> matrix = [[2, 4], [6, 8], [10, 2]]
	>>> print(matrix_divided(matrix, "sttr"))
	Traceback (most recent call last):
  	File "<stdin>", line 1, in <module>
  	...
	TypeError: div must be a number
